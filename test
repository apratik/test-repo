import { S3Client, GetObjectCommand } from "@aws-sdk/client-s3";
import { createWriteStream } from "fs";

class S3ObjectDownloader {
    constructor(options) {
        this.s3Client = new S3Client(options);
    }

    async downloadObject(s3Path, localFilePath) {
        const fileStream = createWriteStream(localFilePath);

        const command = new GetObjectCommand({
            Bucket: s3Path.bucket,
            Key: s3Path.key
        });

        try {
            const response = await this.s3Client.send(command);

            response.Body.pipe(fileStream);

            return new Promise((resolve, reject) => {
                fileStream.on('finish', () => {
                    console.log(`File downloaded from ${s3Path} to ${localFilePath}`);
                    resolve();
                });

                fileStream.on('error', (error) => {
                    reject(error);
                });
            });
        } catch (error) {
            console.error('Error downloading object from S3:', error);
            throw error;
        }
    }
}

export default S3ObjectDownloader;
